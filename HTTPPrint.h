/**************************************************************
 * HTTPPrint.h
 * Provides callback headers and resolution for user's custom
 * HTTP Application.
 * 
 * This file is automatically generated by the MPFS Utility
 * ALL MODIFICATIONS WILL BE OVERWRITTEN BY THE MPFS GENERATOR
 **************************************************************/

#ifndef __HTTPPRINT_H
#define __HTTPPRINT_H

#include "TCPIP Stack/TCPIP.h"

#if defined(STACK_USE_HTTP2_SERVER)

extern HTTP_CONN curHTTP;
extern HTTP_STUB httpStubs[MAX_HTTP_CONNECTIONS];
extern BYTE curHTTPID;

void HTTPPrint(DWORD callbackID);
void HTTPPrint_sensor(WORD);

void HTTPPrint(DWORD callbackID)
{
	switch(callbackID)
	{
        case 0x0000004d:
			HTTPPrint_sensor(0);
			break;
        case 0x0000004e:
			HTTPPrint_sensor(1);
			break;
        case 0x0000004f:
			HTTPPrint_sensor(2);
			break;
        case 0x00000050:
			HTTPPrint_sensor(3);
			break;
        case 0x00000051:
			HTTPPrint_sensor(4);
			break;
        case 0x00000052:
			HTTPPrint_sensor(5);
			break;
        case 0x00000053:
			HTTPPrint_sensor(6);
			break;
        case 0x00000054:
			HTTPPrint_sensor(7);
			break;
        case 0x00000055:
			HTTPPrint_sensor(8);
			break;
        case 0x00000056:
			HTTPPrint_sensor(9);
			break;
        case 0x00000057:
			HTTPPrint_sensor(10);
			break;
        case 0x00000058:
			HTTPPrint_sensor(11);
			break;
        case 0x00000059:
			HTTPPrint_sensor(12);
			break;
        case 0x0000005a:
			HTTPPrint_sensor(13);
			break;
        case 0x0000005b:
			HTTPPrint_sensor(14);
			break;
        case 0x0000005c:
			HTTPPrint_sensor(15);
			break;
        case 0x0000005d:
			HTTPPrint_sensor(16);
			break;
        case 0x0000005e:
			HTTPPrint_sensor(17);
			break;
		default:
			// Output notification for undefined values
			TCPPutROMArray(sktHTTP, (ROM BYTE*)"!DEF", 4);
	}

	return;
}

void HTTPPrint_(void)
{
	TCPPut(sktHTTP, '~');
	return;
}

#endif

#endif
